{"version":3,"sources":["components/StarInput.jsx","zodiacSigns.js","img/Spin-1s-100px.svg","components/Spinner.jsx","components/Horoscope.jsx","components/GlobalStyle.js","App.jsx","reportWebVitals.js","index.js"],"names":["SearchContainer","styled","div","ErrorContainer","StarInput","starSign","handleChange","handleClick","error","errorMessage","value","onChange","type","name","placeholder","disabled","onClick","zodiacs","SpinnerContainer","Spinner","loading","src","alt","HoroscopeContainer","Horoscope","horoscope","description","mood","compatibility","color","lucky_number","lucky_time","current_date","GlobalStyle","createGlobalStyle","App","useState","sign","setSign","setError","setErrorMessage","isLoading","setIsLoading","setHoroscope","getHoroscope","a","axios","post","res","data","result","console","log","e","target","toLowerCase","includes","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81b31199.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst StarInput = ({ starSign, handleChange, handleClick, error, errorMessage }) => {\n  return (\n    <SearchContainer>\n      {error && (\n        <ErrorContainer>\n          <p>{errorMessage}</p>\n        </ErrorContainer>\n      )}\n      <input value={starSign} onChange={handleChange} type=\"text\" name=\"sign\" placeholder=\"Enter your Zodiac Sign\" />\n      <button disabled={starSign === '' ? true : ''} onClick={handleClick}>\n        Get Horoscope\n      </button>\n    </SearchContainer>\n  );\n};\n\nconst SearchContainer = styled.div`\n  max-width: 450px;\n  margin: 5em auto 2em;\n  input {\n    width: 100%;\n    font-size: 1.2rem;\n    text-align: center;\n  }\n  button {\n    color: #242424;\n    margin-top: 1em;\n    width: 100%;\n    font-size: 1.1rem;\n    font-weight: bold;\n  }\n`;\n\nconst ErrorContainer = styled.div`\n  color: red;\n  font-size: 1rem;\n  margin-bottom: 1em;\n  border: 3px solid red;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nexport default StarInput;\n","export const zodiacs = ['aquarius', 'pisces', 'aries', 'taurus', 'gemini', 'cancer', 'leo', 'virgo', 'libra', 'scorpio', 'sagittarius', 'capricorn'];\n","export default __webpack_public_path__ + \"static/media/Spin-1s-100px.f705becb.svg\";","import styled from 'styled-components';\n\nconst Spinner = ({ loading }) => {\n  return (\n    <SpinnerContainer>\n      <div>\n        <img src={loading} alt=\"\" />\n      </div>\n    </SpinnerContainer>\n  );\n};\n\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 100%;\n`;\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nconst Horoscope = ({ horoscope }) => {\n  const { description, mood, compatibility, color, lucky_number, lucky_time, current_date } = horoscope;\n  return (\n    <HoroscopeContainer>\n      <h1>{current_date} Horoscope</h1>\n      <h2>{description}</h2>\n      <h3>Your Mood Today: {mood}</h3>\n      <h3>Your Lucky Number Today: {lucky_number}</h3>\n      <h3>Your Lucky Time Today: {lucky_time}</h3>\n      <h3>Your Lucky Color Today: {color}</h3>\n      <h3>Your Compatible Zodiac Today: {compatibility}</h3>\n    </HoroscopeContainer>\n  );\n};\n\nconst HoroscopeContainer = styled.div`\n  max-width: 450px;\n  margin: 0 auto;\n  text-align: center;\n  background-color: #ececec;\n  border: 1px solid #ececec;\n  padding: 1em 1.2em;\n  border-radius: 4px;\n`;\n\nexport default Horoscope;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box\n  }\n  body {\n    background: #0F2027;  /* fallback for old browsers */\nbackground: -webkit-linear-gradient(to right, #2C5364, #203A43, #0F2027);  /* Chrome 10-25, Safari 5.1-6 */\nbackground: linear-gradient(to right, #2C5364, #203A43, #0F2027); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n\n  }\n  h1 {\n    margin-bottom: .5em\n  }\n  h2,h3 {\n    margin-bottom: 1em\n  }\n`;\n\nexport default GlobalStyle;\n","import { useState } from 'react';\nimport axios from 'axios';\n\nimport StarInput from './components/StarInput';\nimport { zodiacs } from './zodiacSigns';\nimport loading from './img/Spin-1s-100px.svg';\nimport Spinner from './components/Spinner';\nimport Horoscope from './components/Horoscope';\nimport GlobalStyles from './components/GlobalStyle';\n\nfunction App() {\n  const [sign, setSign] = useState('');\n  const [error, setError] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [horoscope, setHoroscope] = useState(null);\n\n  const handleChange = (e) => {\n    setSign(e.target.value.toLowerCase());\n  };\n\n  const getHoroscope = async () => {\n    try {\n      setHoroscope(null);\n      setIsLoading(true);\n      const res = await axios.post(`https://aztro.sameerkumar.website/?sign=${sign}&day=today`);\n      const result = await res.data;\n      setIsLoading(false);\n      setHoroscope(result);\n      console.log(result);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleClick = () => {\n    if (!zodiacs.includes(sign)) {\n      setError(true);\n      setErrorMessage(`${sign} is not a Zodiac Sign. Please enter a valid one`);\n      setSign('');\n      setTimeout(() => {\n        setError(null);\n        setErrorMessage('');\n      }, 4000);\n    } else {\n      setSign('');\n      getHoroscope();\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyles />\n      <StarInput starSign={sign} handleChange={handleChange} handleClick={handleClick} error={error} errorMessage={errorMessage} />\n      {isLoading && <Spinner loading={loading} />}\n      {horoscope && <Horoscope horoscope={horoscope} />}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}